//////////////////////////////////////////////////////////////////////////////
//
// Theremin - Theremin software
//
// Hardware -
//  Microprocessor Board is a MiniDuino
//   ------> http://dougspcbdesigns.pbworks.com/w/page/55223153/MiniDuino
//  Keypad is a 5-way switch
//   ------> http://dougspcbdesigns.pbworks.com/w/page/55033879/Sw5Way
//  IR Sensor is a 
//   ------> 
//  HV Pot is a 
//   ------> http://dougspcbdesigns.pbworks.com/w/page/55033832/HVDigitalPot
//  Display is a 
//   ------> http://myarduino.pbworks.com/w/page/53173808/TFT_Display1p8in
//
//  This sketch works with the library for the Adafruit 1.8" TFT Breakout
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// Includes follow
//////////////////////////////////////////////////////////////////////////////

#include <MiniDuino.h>       // MiniDuino board library
#include <Adafruit_GFX.h>    // Core graphics library
#include <Adafruit_ST7735.h> // Hardware-specific library
#include <SPI.h>

#define VOLDAT	2
#define FREQDAT	3
#define CLK	4
#define CS0	5

//////////////////////////////////////////////////////////////////////////////
//#define SERIAL_OUT
//////////////////////////////////////////////////////////////////////////////

//#define SERIAL_OUT
#undef SERIAL_OUT

//////////////////////////////////////////////////////////////////////////////
// enums follow
//////////////////////////////////////////////////////////////////////////////

enum MENUITEMS
{
  TESTKEYPAD_MENU,
  TESTIR_MENU,
  SETVOL_MENU,
  SETFRQ_MENU,
  CALIBR_MENU,
};

//////////////////////////////////////////////////////////////////////////////
// defines follow
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// Global variables follow
//////////////////////////////////////////////////////////////////////////////

int menuState;

unsigned char volumeValue;
unsigned char freqValue;

//////////////////////////////////////////////////////////////////////////////
// class initializers
//////////////////////////////////////////////////////////////////////////////

Adafruit_ST7735 tft = Adafruit_ST7735(LCD_CS, LCD_DC, LCD_RST);
MiniDuino myMiniDuino;

//////////////////////////////////////////////////////////////////////////////
// setup()
//////////////////////////////////////////////////////////////////////////////

void setup()  
{
#ifdef SERIAL_OUT
  Serial.begin(9600);
#endif

  pinMode(VOLDAT, OUTPUT);
  pinMode(FREQDAT, OUTPUT);
  pinMode(CLK, OUTPUT);
  pinMode(CS0, OUTPUT);
  digitalWrite(VOLDAT, LOW);
  digitalWrite(FREQDAT, LOW);
  digitalWrite(CLK, LOW);
  digitalWrite(CS0, HIGH);
  volumeValue = 0;
  freqValue = 0;
  setHVPots();

  menuState = TESTKEYPAD_MENU;

  tft.initR(INITR_REDTAB);

  tft.setTextSize(1);
  tft.fillScreen(ST7735_BLACK);
  tft.setCursor(0, 0);
  tft.setTextColor(ST7735_WHITE,ST7735_BLACK);
  
  menuRefresh();

}

//////////////////////////////////////////////////////////////////////////////
// loop()
//////////////////////////////////////////////////////////////////////////////

void loop()                     // run over and over again
{
  int pitch;
  int vol;
  int pitch2;
  int vol2;
//  if (myMiniDuino.pollKeypad() != NONE)
//  {
      menuRefresh();
      menuNav();
//  }
#ifdef SERIAL_OUT
  Serial.println(pitch);
  Serial.println(vol);
#endif
  getSetVolFreq();
}

//////////////////////////////////////////////////////////////////////////////////////
// setCursorTFT(int row, int col)
//////////////////////////////////////////////////////////////////////////////////////

void setCursorTFT(int row, int col)
{
  tft.setCursor(col*6, row*10);
}

